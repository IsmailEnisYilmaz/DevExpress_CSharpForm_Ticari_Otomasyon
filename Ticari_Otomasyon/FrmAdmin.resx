<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        oQqgEIQgBCEID//Z
</value>
  </data>
</root>